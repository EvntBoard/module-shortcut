name: Module ShortCut

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - id: get_version
        uses: battila7/get-version-action@v2

      ## IOHOOK PART

      - name: Setup Linux Dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common libx11-dev libxtst-dev libxt-dev libx11-xcb-dev libxkbcommon-dev libxkbcommon-x11-dev xorg-dev libxcb-xkb-dev libxkbfile-dev libxinerama-dev

      ## --branch=v0.9.3
      - name: Rebuild iohook
        run: |
          git clone https://github.com/wilix-team/iohook.git iohook
          cd iohook
          npm i --ignore-scripts
          npm run build --msvs_version=2019

      ## IOHOOK PART

      - name: Prepare dist
        shell: bash
        run: mkdir ./dist

      - name: Copy metadata.json
        shell: bash
        run: |
          cp ./metadata.json ./dist/metadata.json

      - name: Copy config.json
        shell: bash
        run: |
          cp ./config.json ./dist/config.json

      - name: Populate metadata.json
        shell: bash
        run: |
          npx rexreplace '__MODULE_REPO__' '${{ github.repository }}' ./dist/metadata.json
          npx rexreplace '__MODULE_VERSION__' '${{ steps.get_version.outputs.version }}' ./dist/metadata.json

      - name: Build module
        shell: bash
        run: |
          cd module
          yarn
          yarn build

      - name: Copy module
        shell: bash
        run: |
          mkdir ./dist/module
          cp -a ./module/build/. ./dist/module

      - name: Copy IOHOOK Linux x64
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          rm -rf ./dist/module/builds
          mkdir -p ./dist/module/builds/node-v83-linux-x64/build/Release
          cp iohook/build/Release/iohook.node ./dist/module/builds/node-v83-linux-x64/build/Release/iohook.node
          cp iohook/build/Release/uiohook.so ./dist/module/builds/node-v83-linux-x64/build/Release/uiohook.so

      - name: Copy IOHOOK Windows x64
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          rm -rf ./dist/module/builds
          mkdir -p ././dist/module/builds/node-v83-win32-x64/build/Release
          cp ./iohook/build/Release/iohook.node ./dist/module/builds/node-v83-win32-x64/build/Release/iohook.node
          cp ./iohook/build/Release/uiohook.dll ./dist/module/builds/node-v83-win32-x64/build/Release/uiohook.dll

      - name: Copy IOHOOK MacOS x64
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          rm -rf ./dist/module/builds
          mkdir -p ./dist/module/builds/node-v83-darwin-x64/build/Release
          cp iohook/build/Release/iohook.node ./dist/module/builds/node-v83-darwin-x64/build/Release/iohook.node
          cp iohook/build/Release/uiohook.dylib ./dist/module/builds/node-v83-darwin-x64/build/Release/uiohook.dylib

      - name: Pack Linux x64
        if: startsWith(github.ref, 'refs/tags/') && startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          cd ./dist/
          npx bestzip ../${{ github.event.repository.name }}-linux-x64-${{ steps.get_version.outputs.version }}.zip .

      - name: Pack Win x64
        if: startsWith(github.ref, 'refs/tags/') && startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          cd ./dist/
          npx bestzip ../${{ github.event.repository.name }}-win-x64-${{ steps.get_version.outputs.version }}.zip .

      - name: Pack Macos x64
        if: startsWith(github.ref, 'refs/tags/') && startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          cd ./dist/
          npx bestzip ../${{ github.event.repository.name }}-macos-x64-${{ steps.get_version.outputs.version }}.zip .

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            *.zip